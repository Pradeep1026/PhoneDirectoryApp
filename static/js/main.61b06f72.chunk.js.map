{"version":3,"sources":["components/layout/Header.js","components/pages/Add.js","components/layout/PhonebookPerson.js","components/layout/PhonebookDetails.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","title","Component","Add","state","name","phone","onSubmit","e","preventDefault","_this","addDetail","setState","onChange","Object","defineProperty","target","value","Fragment","Link","to","type","placeholder","required","style","flex","PhonebookPerson","_this$props$detail","detail","id","onClick","delDetails","bind","proTotype","PropTypes","object","isRequired","func","PhonebookDetails","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","details","map","PhonebookPerson_PhonebookPerson","array","App","uuid","v4","toConsumableArray","filter","newDeatails","concat","_this2","BrowserRouter","Route","exact","path","render","Header_Header","layout_PhonebookDetails","Add_Add","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61b06f72.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        {this.props.title}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component} from 'react';\r\nimport { Link }from 'react-router-dom';\r\nimport './Add.css';\r\nimport '../../App.css';\r\n\r\nexport default class Add extends Component {\r\n  state = {\r\n    name: '',\r\n    phone:'',\r\n}\r\n\r\nonSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addDetail(this.state.name, this.state.phone);\r\n    this.setState({name: ''});\r\n    this.setState({phone: ''});\r\n}\r\n\r\nonChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n\r\nrender() {\r\n  return (\r\n    <React.Fragment>\r\n    <Link to = \"/\"> Back </Link>\r\n    <div className=\"form-container\">\r\n      <form onSubmit = {this.onSubmit}>\r\n        <label><b>Name:</b></label> <br/>\r\n            <input\r\n                type = \"text\"\r\n                name = \"name\"\r\n                placeholder = \"Name\"\r\n                value = {this.state.name}\r\n                onChange = {this.onChange}\r\n                className = \"input\"\r\n            required/> <br/>\r\n            <label><b>Phone:</b></label> <br/>\r\n            <input\r\n                type = \"text\"\r\n                name = \"phone\"\r\n                placeholder = \"Mobile no:\"\r\n                value = {this.state.phone}\r\n                onChange = {this.onChange}\r\n                className = \"input\"\r\n             required/> <br/>\r\n            <label><h1>Subscriber to be added</h1></label>\r\n            <label>NAME: {this.state.name} </label> <br/>\r\n            <label>PHONE: {this.state.phone} </label> <br/>\r\n            <input\r\n              type = \"submit\"\r\n              name = \"Submit\"\r\n              style = {{flex: '1'}}\r\n              className = \"button\" \r\n            />\r\n       </form>\r\n    </div>\r\n    </React.Fragment>\r\n  )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport '../../App.css';\r\n\r\nexport default class PhonebookPerson extends Component {\r\n\r\nrender() {\r\n    const { id, name, phone } = this.props.detail;\r\n    return ((name) ?\r\n    <tr>\r\n    <td>{name}</td>\r\n    <td>{phone}</td>\r\n    <td><button onClick={this.props.delDetails.bind(this, id)} className='button deleteBtn'>DELETE</button></td>              \r\n    </tr> \r\n    : <tr></tr>\r\n        \r\n    );\r\n    }\r\n}\r\n\r\n//PropTypes\r\nPhonebookPerson.proTotype = {\r\n    detail: PropTypes.object.isRequired,\r\n    delDetails: PropTypes.func.isRequired,\r\n}\r\n","import React, { Component } from 'react';\r\nimport PhonebookPerson from './PhonebookPerson';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class PhonebookDetails extends Component {\r\n\r\n  render() {\r\n    return this.props.details.map(detail => (\r\n        <PhonebookPerson key={detail.id} detail={detail} delDetails={this.props.delDetails}/>\r\n    ))\r\n  }\r\n}\r\n\r\n//PropTypes\r\nPhonebookDetails.proTotype = {\r\n    details: PropTypes.array.isRequired,\r\n    delDetails: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PhonebookDetails\r\n","import React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Add from './components/pages/Add';\nimport PhonebookDetails from './components/layout/PhonebookDetails';\nimport uuid from 'uuid';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    details: [\n      {\n        id: uuid.v4(),\n        name:'',\n        phone:''\n      },\n    ]\n  }\n\n  //del details \n  delDetails = (id) => {\n    this.setState({ details: [...this.state.details.filter(detail => detail.id !== id)]});\n  }\n  //Add details\n  addDetail = (name,phone) => {\n    const newDeatails = {\n      id: uuid.v4(),\n      name,\n      phone,\n    }\n    this.setState({ details: [...this.state.details, newDeatails]})\n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"main-container\">\n          <div className=\"component-container\">\n            \n            <Route exact path = \"/\" render = {props => (\n              <React.Fragment>\n              <Header title={\"PHONE DIRECTORY\"}/>\n                <div className=\"component-body-container\">\n                 <Link to = \"/add\" className=\"button\"> ADD </Link>\n                 <table>\n                    <tbody>\n                      <th>NAME</th> <th>PHONE</th> <th></th>\n                      <PhonebookDetails details={this.state.details} delDetails={this.delDetails} />\n                    </tbody>\n                 </table>\n                 </div>\n              </React.Fragment>\n            )}/>\n            <Route path = \"/add\"  exact render={\n              () => {\n                return (<div>\n                  <Header title={\"ADD SUBSCRIBER\"}/>\n                  <Add addDetail={this.addDetail} />\n                 </div>\n              )}\n            }/>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}